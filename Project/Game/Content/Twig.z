class Twig : ZilchComponent {
    
    [Property]
    var Radius : Real = 5;
    
    var Stepped : Boolean = false;
    
    function Initialize(init : CogInitializer) {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnCollisionStarted(event : CollisionEvent) {
        if(event.OtherObject == GlobalVariables.Player && !this.Stepped) {
            this.Stepped = true;
            var toSend = InSound();
            toSend.Source = this.Owner.Transform.WorldTranslation;
            var filter = CastFilter();
            filter.IgnoreStatic = true;
            filter.IgnoreGhost = true;
            var result = this.Space.PhysicsSpace.CastSphereResults(this.Owner.Transform.WorldTranslation, this.Radius, 20, filter);
            foreach(var item in result) {
                
                item.ObjectHit.DispatchEvent(Events.InSound, toSend);
                
            }
            
            if(GlobalVariables.DebugLinesActive) {
                Utilities.DrawCircle(this.Owner.Transform.WorldTranslation, this.Radius, false, Real4(1,0,0,1));
            }
            
        }
    }

    function OnLogicUpdate(event : UpdateEvent) {
    }
}
