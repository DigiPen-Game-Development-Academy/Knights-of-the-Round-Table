class StealthBoss : ZilchComponent {
    
    [Dependency] var Stealth : Stealth;
    [Dependency] var AI : EnemyAI;
    
    [Property] var SneakCooldown : Real = 5;
    
    var MinDist : Real = 3;
    
    var Timer : Real = 0;
    
    var Rand : Random;
    
    var Active : Boolean = true;
    
    function Initialize(init : CogInitializer) {
        //set collision table so raycast goes through enemies
        if(this.Space.PhysicsSpace.CollisionTable != CollisionTable.CollisionTable) {
            this.Space.PhysicsSpace.CollisionTable = CollisionTable.CollisionTable;
        }
        
        this.Timer = this.SneakCooldown;
        
        this.Rand = Random();
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent) {
        
        this.Stealth.Active = this.Active;
        
        if(!this.Active) {
            this.Owner.Sprite.Color = Real4(this.Owner.Sprite.Color.XYZ, 1);
            return;
        }
        
        this.Timer -= event.Dt;
        
        this.AI.State = State.Spotted;
        
    }
    
    function InFlashlightRange (pos : Real3) : Boolean {
        var vec = pos - GlobalVariables.Player.Transform.WorldTranslation;
        var vec2 = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(Zero.Mouse.ScreenPosition, 0) - GlobalVariables.Player.Transform.WorldTranslation;
        
        var dot = Math.Dot(Math.Normalize(vec), Math.Normalize(vec2));
        
        var angle = Math.ACos(dot);
        
        var dist = Math.Distance(GlobalVariables.Player.Transform.WorldTranslation, pos);
        
        if(angle > Math.ToRadians(45) || dist > 10 || (dist > 2 && (GlobalVariables.UseWeapon.Utility == null || GlobalVariables.UseWeapon.Utility.ID != "Light"))) {
            
            return false;
            
        }
        return true;
    }
    
}
