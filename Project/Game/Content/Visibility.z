class Visibility : ZilchComponent {
    
    var InSight : Boolean = false;
    
    function Initialize(init : CogInitializer) {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent) {
        
        if(GlobalVariables.Player == null)
            return;
        
        var filter = CastFilter();
        var vel = GlobalVariables.Player.RigidBody.Velocity;
        GlobalVariables.Player.RigidBody.DynamicState = RigidBodyDynamicState.Static;
        filter.IgnoreDynamic = true;
        filter.IgnoreGhost = true;
        
        var res = Utilities.Raycast(this.Owner.Transform.WorldTranslation, GlobalVariables.Player.Transform.WorldTranslation - this.Owner.Transform.WorldTranslation, this.Space.PhysicsSpace, 20, filter);
        
        if(res != null && res.ObjectHit == GlobalVariables.Player) {
            this.Owner.Sprite.Visible = true;
            this.InSight = true;
        } else {
            this.Owner.Sprite.Visible = false;
            this.InSight = false;
        }
        
        GlobalVariables.Player.RigidBody.DynamicState = RigidBodyDynamicState.Dynamic;
        GlobalVariables.Player.RigidBody.Velocity = vel;
    }
}
