class MeleeFX : ZilchComponent {
    
    var Timer : Real = -100;
    
    var Left : Boolean = false;
    
    var Speed : Real = 4;
    
    var Dist : Real = 0.25;
    
    var AngleOffset : Real = -90;
    
    var Angle : Real = 45;
    
    var Initialized : Boolean = false;
    
    var Sprite : SpriteSource;
    
    function Initialize(init : CogInitializer) {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent) {
        if(!this.Initialized) {
            return;
        }
        
        if(this.Left) {
            this.Timer += event.Dt * this.Speed;
        } else {
            this.Timer -= event.Dt * this.Speed;
        }
        
        this.Owner.Transform.SetEulerAnglesXYZ(0, 0, this.Timer);
        this.Owner.Transform.Translation = Real3(Math.Cos(this.Owner.Transform.EulerAngles.Z) * this.Dist, Math.Sin(this.Owner.Transform.EulerAngles.Z) * this.Dist, 0);
        
        this.Owner.Transform.SetEulerAnglesXYZ(0, 0, this.Owner.Transform.EulerAngles.Z + Math.ToRadians(this.AngleOffset));
        this.Owner.Sprite.FlipX = true;
        if(this.Left) {
            
            this.Owner.Transform.Translation = -this.Owner.Transform.Translation;
            
            this.Owner.Sprite.FlipY = true;
            
        }
        
        if((this.Left && this.Timer > -Math.ToRadians(this.Angle)) || (!this.Left && this.Timer < Math.ToRadians(this.Angle))) {
            this.Owner.Destroy();
        }
        
    }
    
    function Init() {
        
        if(this.Left) {
            this.Owner.Transform.SetEulerAnglesXYZ(0, 0, Math.ToRadians(this.Angle));
        } else {
            this.Owner.Transform.SetEulerAnglesXYZ(0, 0, Math.ToRadians(this.Angle + 180));
        }
        
        this.Timer = this.Owner.Transform.EulerAngles.Z;
        
        this.Initialized = true;
        this.Owner.Sprite.SpriteSource = this.Sprite;
        
    }
    
}
